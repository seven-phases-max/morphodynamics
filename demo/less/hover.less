
@import "../../src/morphodynamics.less";

// ............................................................
// config:

#config {
    @animated-state: ~':hover';
    .default-style() {
        // color: red;
    }
}

// ............................................................
// Miscellaneous

.begin-effects-group(1, "Miscellaneous");

.md.class(text-blur .66s forwards, {
    to {
        color: transparent;
        text-shadow: 0 0 .66em white;
    }
});

.md.class(text-glow .33s linear forwards, {
    to {text-shadow: 0 0 .55em fade(#fff, 77%);}
});

.md.class(color-spin 5.5s linear alternate infinite, {
    .frame-iteration(7); .-(@advance) {
        background-color: spin(#6C9, (360 * @advance));
    }
});

// ............................................................
// Border Transitions

.begin-effects-group(2, "Border Transitions");

.border-fade   {.md.transition(box-shadow .33s, inset 0 0 0 .2em fade(#000, 25%))}
.hollow        {.md.transition(background .33s, fade(#f0ad4e, 66%))} // fixme
.round-corners {.md.transition(border-radius .55s, 50%)}

// todo:
.outline-outward {
    .using-before();
    &:hover:before {.move(-.5em)}
    &:before {
        .move(-1px);
        transition-duration: .33s;
        transition-property: top, right, bottom, left;
        border: fade(#000, 20%) solid .2em;
        border-radius: inherit;
    }
}

// ............................................................
// Shadow Transitions

.begin-effects-group(3, "Shadow Transitions");

.glow          {.md.transition(box-shadow .33s, 0 0 .55em fade(#000, 55%))}
.shadow-outset {.md.transition(box-shadow .33s, .13em .13em .13em fade(#000, 44%))}
.shadow-inset  {.md.transition(box-shadow .33s, inset .13em .13em .13em fade(#000, 44%))}

// ............................................................
// Bubbles

.begin-effects-group(4, "Bubbles");

& {
    @size: .55em;

    .bubble-top    {.bubble(top)}
    .bubble-right  {.bubble(right)}
    .bubble-bottom {.bubble(bottom)}
    .bubble-left   {.bubble(left)}
    
    .bubble-float-top {
        .bubble(top);
        .md.transition(transform .44s, translateY((@size / +2)))
    }

    .bubble-float-right {
        .bubble(right);
        .md.transition(transform .44s, translateX((@size / -2)))
    }

    .bubble-float-bottom {
        .bubble(bottom);
        .md.transition(transform .44s, translateY((@size / -2)))
    }

    .bubble-float-left {
        .bubble(left);
        .md.transition(transform .44s, translateX((@size / +2)))
    }

    .bubble(@side) {
        .using-before();
        &:hover:before {@{side}: -@size}
        &:before {
            z-index: -1;
            transition: @side .44s;
            @{side}: 0;
            border: @size solid transparent;
            border-@{side}-width: 0;
            .-(@side);
            .-(top)    {left: calc(50% - @size); border-bottom-color: inherit}
            .-(right)  {top:  calc(50% - @size); border-left-color:   inherit}
            .-(bottom) {left: calc(50% - @size); border-top-color:    inherit}
            .-(left)   {top:  calc(50% - @size); border-right-color:  inherit}
        }
    }
}

// ............................................................
// 2D Transforms

.begin-effects-group(5, "2D Transforms");

& {
    #config { // fixme
        .default-style() {
            transform: translateZ(0);
            box-shadow: 0 0 1px fade(red, 0);
            // color: green;
        }
    }

    .grow   {.md.transition(transform .33s, scale(1.1))}
    .shrink {.md.transition(transform .33s, scale(0.9))}
    
    .md.class(pulse 1.1s linear infinite, {
        25% {transform: scale(0.9)}
        75% {transform: scale(1.1)}
    });

    .md.class(pulse-grow .33s linear infinite alternate, {
        to  {transform: scale(1.1)}
    });
    
    .md.class(pulse-shrink .33s linear infinite alternate, {
        to  {transform: scale(0.9)}
    });

    .md.class(push .33s linear, {
        50% {transform: scale(0.8)}
    });

    .md.class(pop .33s linear, {
        50% {transform: scale(1.2)}
    });
    
    .rotate        {.md.transition(transform .33s, rotate(5deg))}
    .grow-rotate   {.md.transition(transform .33s, scale(1.1) rotate(5deg))}
    
    .float         {.md.transition(transform .33s, translateY(-.5em))}
    .sink          {.md.transition(transform .33s, translateY(+.5em))}
    
    .skew          {.md.transition(transform .33s, skew(-11deg))}
    .skew-forward  {.md.transition(transform .33s, skew(-11deg)); transform-origin: 0 100%}
    .skew-backward {.md.transition(transform .33s, skew(+11deg)); transform-origin: 0 100%}

    .md.class(wobble-horizontal 1.1s ease-in-out, {
        .frame-sequence(transform, 
            translate px, +8 -6 +4 -2 +1 0);
    });
    
    .md.class(wobble-vertical 1.1s ease-in-out, {
        .frame-sequence(transform, 
            translateY px, +8 -6 +4 -2 +1 0);
    });
    
    .md.class(wobble-bottom-right 1.1s ease-in-out, {
        .frame-sequence(transform; 
            translate px; +8 +8, -6 -6, +4 +4, -2 -2, +1 +1, 0 0);
    });

    .md.class(wobble-top-right 1.1s ease-in-out, {
        .frame-sequence(transform; 
            translate px; +8 -8, -6 +6, +4 -4, -2 +2, +1 -1, 0 0);
    });

    .wobble-scew-top    {.wobble-scew(); transform-origin: 0 100%}
    .wobble-scew-bottom {.wobble-scew(); transform-origin: 100% 0}

    .md.class(wobble-scew 1.1s ease-in-out, {
        .frame-sequence(transform, 
            skew deg, -12 +10 -6 +4 -2 0);
    });
    
    .md.class(buzz .15s linear infinite, {
        50% {transform: translateX(+3px) rotate(+2deg)}
       100% {transform: translateX(-3px) rotate(-2deg)}
    });

    .md.class(buzz-out .77s linear, {
        .frame-sequence(transform,
            translateX px, +3 -3 +3 -3 +2 -2 +2 -2 +1 -1,
            rotate    deg, +2 -2 +2 -2 +1 -1 +1 -1  0  0
        );
    });
}

// ............................................................
// some utility mixins:

.begin-effects-group(@i, @title) {
    .md-group-@{i}:hover {
        content: @title;
    }
}

.using-before() {
    position: relative;
    &:before{
        pointer-events: none;
        position: absolute;
        content: '';
    }
}

.move(@p) {
    top:    @p;
    right:  @p;
    bottom: @p;
    left:   @p;
}
